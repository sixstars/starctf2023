from Crypto.Util.number import *
from public_values_aux import *
import hashlib

load('castryck_decru_shortcut.sage')

a = 43
b = 26
p = 2^a*3^b - 1
assert p in Primes()
K.<i> = GF(p^2, modulus=x^2+1)
E = EllipticCurve(K, [0,6,2,1,-1])
EE = EllipticCurve(K, [0,6,0,1,0])

info='''
(378814515939412227134279*i + 6954868428680463835427988 : 8630179184318098642344209*i + 3001529297627963651661752 : 1) (11208403457069450597412333*i + 2359491166389018232980278 : 19401356367187226074788823*i + 20693102079445363728026532 : 1) (5674951884033580986929328*i + 22196580432087361180000116 : 20862518855148986213240156*i + 9130839294602837494568010 : 1) (5455836431980736996770539*i + 16359980490061831619863024 : 6423941456508027672925842*i + 20988014422044297525954324 : 1)
(2227297525031670268262704*i + 1002106657841888291271373 : 15214798914508850872004971*i + 12557446591322302477900041 : 1) (12063038170712632869620621*i + 13573417922891759527293224 : 10661249940441518528681763*i + 18033205806394179376376559 : 1)
(18552761375306700000780232*i + 11706513759831085968051260 : 4907799477130153153831715*i + 7111621111852599259699863 : 1) (18469028642447718646001130*i + 17194519307458154866291301 : 18403779696286771725039680*i + 16098606584135027712232925 : 1)
(21997468988893649835210136*i + 15932964954245548951202309 : 4125812148311464880582524*i + 884317838454914617649300 : 1) (18776398650898678020978222*i + 20800280545780923474516614 : 11677901230203763916636441*i + 2634837966409670014323413 : 1)
61342172857817274763879092151723381200687807188898834158661666331240551751402
'''.split('\n')[1:-1]

A0,B0,C0,D0,E0=E.a_invariants()
Pa,Qa,Pb,Qb = [E(eval(c.replace(':',',')+')')) for c in info[0].split(')')[:4]]
(x1,y1,_),(x2,y2,_) = [eval(c.replace(':',',')+')') for c in info[1].split(')')[:2]]
'''
y1**2+A0*x1*y1+C0*y1==x1**3+B0*x1**2+D1*x1+E1
y2**2+A0*x2*y2+C0*y2==x2**3+B0*x2**2+D1*x2+E1
(y1**2-y2**2)+A0*(x1*y1-x2*y2)+C0*(y1-y2)-(x1**3-x2**3)-B0*(x1**2-x2**2)==D1*(x1-x2)
'''
D1=((y1**2-y2**2)+A0*(x1*y1-x2*y2)+C0*(y1-y2)-(x1**3-x2**3)-B0*(x1**2-x2**2))/(x1-x2)
E1=y1**2+A0*x1*y1+C0*y1-x1**3-B0*x1**2-D1*x1
Ea=EllipticCurve(K,[A0,B0,C0,D1,E1])
phiPb,phiQb=Ea(x1,y1),Ea(x2,y2)

(x1,y1,_),(x2,y2,_) = [eval(c.replace(':',',')+')') for c in info[2].split(')')[:2]]
D1=((y1**2-y2**2)+A0*(x1*y1-x2*y2)+C0*(y1-y2)-(x1**3-x2**3)-B0*(x1**2-x2**2))/(x1-x2)
E1=y1**2+A0*x1*y1+C0*y1-x1**3-B0*x1**2-D1*x1
Eb=EllipticCurve(K,[A0,B0,C0,D1,E1])
psiPa,psiQa=Eb(x1,y1),Eb(x2,y2)

(x1,y1,_),(x2,y2,_) = [eval(c.replace(':',',')+')') for c in info[3].split(')')[:2]]
D1=((y1**2-y2**2)+A0*(x1*y1-x2*y2)+C0*(y1-y2)-(x1**3-x2**3)-B0*(x1**2-x2**2))/(x1-x2)
E1=y1**2+A0*x1*y1+C0*y1-x1**3-B0*x1**2-D1*x1
Eab=EllipticCurve(K,[A0,B0,C0,D1,E1])
Pab,Qab=Eab(x1,y1),Eab(x2,y2)

S=discrete_log(Pab,-Qab,operation='+')

two_i = generate_distortion_map(EE)
P3 = EE(Pb.xy()[0],Pb.xy()[1]+1)
Q3 = EE(Qb.xy()[0],Qb.xy()[1]+1)
PPa=EE(Pa.xy()[0],Pa.xy()[1]+1)
QQa=EE(Qa.xy()[0],Qa.xy()[1]+1)
A1,B1,C1,D1,E1=Eb.a_invariants()
EEb=EllipticCurve(K,[A1,B1,C1-2,D1,E1+1])
psiPPa=EEb(psiPa.xy()[0],psiPa.xy()[1]+1)
psiQQa=EEb(psiQa.xy()[0],psiQa.xy()[1]+1)
T = CastryckDecruAttack(EE, PPa, QQa, EEb, psiPPa, psiQQa, two_i, num_cores=1)

flag=long_to_bytes(bytes_to_long(hashlib.sha256(b'%d-%d'%(S,T)).digest())^^int(info[-1])).decode()
print(flag)